// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String   @id @default(cuid())
  name        String
  description String
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  price       Float
  spots       Spot[]

}

model Spot {
  id            String   @id @default(cuid())
  name          String
  status        SpotStatus
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  eventId       String
  Event         Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  reservations  ReservationHistory[]
  Ticket        Ticket?
}

enum SpotStatus {
  AVAILABLE
  RESERVED
}

model ReservationHistory {
  id          String   @id @default(cuid())
  email       String
  ticketKind  TicketKind
  status      TicketStatus
  spotId      String
  spot        Spot     @relation(fields: [spotId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum TicketStatus {
  CONFIRMED
  CANCELLED
}

enum TicketKind {
  HALF
  FULL
}

model Ticket {
  id          String   @id @default(cuid())
  email       String
  ticketKind  TicketKind
  spotId      String
  spot        Spot     @relation(fields: [spotId], references: [id], onDelete: Cascade)
  @@unique([spotId])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
